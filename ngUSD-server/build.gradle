
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

repositories {
    mavenCentral()
    maven {
        url "http://projectlombok.org/mavenrepo"
    }
}

dependencies {
    compile 'org.jboss.resteasy:resteasy-jaxrs:2.3.3.Final'
    compile 'org.jboss.resteasy:resteasy-jaxb-provider:2.3.3.Final'
    compile 'org.jboss.resteasy:resteasy-jackson-provider:2.3.3.Final'
    providedCompile 'javax.servlet:servlet-api:2.5'
}

eclipse {
  wtp {
    component {
      contextPath = 'ngusd'
      deployName = 'ngusd'
    }
  }
}

// Prevent Eclipse "Gradle -> Refresh All" to execute cleanEclipseJdt,
// because it would delete our version of the org.eclipse.jdt.ui.prefs file.
cleanEclipse.dependsOn = cleanEclipse.taskDependencies.values - cleanEclipseJdt


task printPathConfigInformationForNodeJSAndGrunt << {
	if (project.hasProperty('pathToNodeJS')) {
        println "Path to Node JS was configued as: " + pathToNodeJS  	
    } else {
    	println "Path to Node JS not specified, set property 'pathToNodeJS' in case the PATH variable is not set properly or not propagated to the client's build script."        
    }
    if (project.hasProperty('installGrunt')) {
        println "installGrunt is specified, this will trigger installation of grunt in client build: " + installGrunt + " (this value should be 'installGrunt')"
    } else {
        println "installGrunt: property is undefined, this means grunt is assumed to be installed already."    
    }
}

task buildClient(type: Exec) {	
	 if (project.hasProperty('pathToNodeJS')) {
    	commandLine '../ngUSD-client/build.sh', pathToNodeJS, installGrunt
     } else {
        commandLine '../ngUSD-client/build.sh'
     }
}	

buildClient.dependsOn printPathConfigInformationForNodeJSAndGrunt																																																																																																																																																																																																																																																																																															


war {
    from '../ngUSD-client/dist'
}

war.dependsOn = war.taskDependencies.values + tasks.buildClient
